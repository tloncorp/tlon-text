---
import { getHeaderNav } from "../utils/api";
const links = await getHeaderNav();
// const links = [];
---

<header
  role="banner"
  class="fixed left-0 top-0 z-10 flex w-full items-center justify-between bg-white px-4 leading-none md:bg-transparent md:px-8 md:py-6 dark:bg-blackish dark:md:bg-transparent"
>
  <a class="inline-block w-12 p-4" href="/">
    <img id="t-block" src="/icon.svg" alt="Tlon logo" />
  </a>
  {
    links && (
      <nav>
        <ul class="flex">
          {links.map((link: any) => (
            <li>
              <a
                class:list={[
                  {
                    "max-sm:hover:underline hover:sm:bg-navHover dark:sm:hover:bg-mono-800":
                      link.displayButton,
                  },
                  {
                    "link-underline-hover": !link.displayButton,
                  },
                  "inline-block rounded-lg px-4 py-2 transition-colors",
                ]}
                href={link.url}
                target={link.blank ? "_blank" : "_self"}
              >
                {link.text}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    )
  }
</header>

<script>
  // Safari doesn't support prefers-color-scheme media queries in SVGs,
  // so we need to manually swap the logo based on the user's preference.

  // @ts-nocheck
  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
  if (isSafari) {
    const logoSwap = () => {
      const logo = document.querySelector("img#t-block");
      if (matchMedia("(prefers-color-scheme: dark)").matches) {
        logo.src = "/icon-white.svg";
      } else {
        logo.src = "/icon.svg";
      }
    };

    logoSwap();

    const mql = matchMedia("(prefers-color-scheme: dark)");
    mql.addEventListener("change", () => {
      logoSwap();
    });
  }
</script>
