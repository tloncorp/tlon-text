---
import { getPosts } from "../../utils/api";
import {
  type BlockImage,
  type BlockVideo,
  type AuthorObj,
} from "../../utils/types";

import GlobalLayout from "../../layouts/GlobalLayout.astro";

import Author from "../../components/Author.astro";
import NewsletterSignup from "../../components/NewsletterSignup.astro";
import PageTitle from "../../components/PageTitle.astro";
import Picture from "../../components/Picture.astro";
import PortableText from "../../components/PortableText.astro";
import RelatedPost from "../../components/RelatedPost.astro";
import Video from "../../components/Video.astro";

interface Props {
  author: AuthorObj;
  body: any;
  excerpt: any;
  featuredImage: BlockImage;
  featuredVideo?: BlockVideo;
  metaDescription: string;
  metaTitle: string;
  relatedPosts: relatedPost[];
  tags: tag[];
  title: string;
}

interface tag {
  title: string;
  slug: string;
}
interface relatedPost {
  title: string;
  slug: string;
  created: string;
  author: AuthorObj;
  featuredImage: BlockImage;
}

export async function getStaticPaths() {
  return await getPosts();
}

const {
  author,
  body,
  excerpt,
  featuredImage,
  featuredVideo,
  metaTitle,
  metaDescription,
  tags,
  title,
  relatedPosts,
} = Astro.props;
---

<GlobalLayout
  metaDescription={metaDescription}
  metaTitle={metaTitle ? metaTitle : title}
>
  <article>
    <header class="mx-auto max-w-inner-sm space-y-8">
      <PageTitle title={title} />
      <Author author={author} />
      <PortableText portableText={excerpt} />
    </header>

    {
      featuredVideo ? (
        <div class="mx-auto max-w-inner-lg py-16">
          <Video asset={featuredVideo} />
        </div>
      ) : (
        <div class="mx-auto flex max-w-inner-lg items-center py-16">
          <Picture asset={featuredImage} visualMaxWidth={1120} />
        </div>
      )
    }

    <div class="mx-auto max-w-inner-sm">
      <PortableText portableText={body} />
    </div>

    {
      tags && (
        <div class="mx-auto max-w-inner-sm pt-20">
          <h6 class="mb-6 text-md">Tagged:</h6>
          {tags.map((tag: tag) => (
            <a
              class="mb-3 mr-3 inline-block rounded-xl bg-mono-100 px-4 py-2.5 text-mono-600 transition-colors hover:bg-mono-200 sm:text-md dark:bg-mono-800 dark:text-white dark:hover:bg-mono-700"
              href={`/tag/${tag.slug}`}
            >
              #{tag.slug}
            </a>
          ))}
        </div>
      )
    }

    {
      relatedPosts && relatedPosts.length > 0 && (
        <aside role="complementary" class="mx-auto max-w-inner-lg pt-32">
          <h5 class="pb-16 text-center text-xl sm:text-2xl">
            You might be interested in these:
          </h5>
          <nav class="max-md:flex-col max-md:space-y-4 md:flex md:items-start md:justify-center md:space-x-4 lg:space-x-8">
            {relatedPosts.map((post: relatedPost) => (
              <div class="max-md:flex max-md:justify-center md:w-1/3">
                <RelatedPost
                  slug={post.slug}
                  title={post.title}
                  created={post.created}
                  featuredImage={post.featuredImage}
                  author={post.author}
                />
              </div>
            ))}
          </nav>
        </aside>
      )
    }

    <div class="mx-auto max-w-inner-sm pt-32">
      <NewsletterSignup />
    </div>
  </article>
</GlobalLayout>
